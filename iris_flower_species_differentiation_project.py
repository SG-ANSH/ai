# -*- coding: utf-8 -*-
"""Iris Flower Species Differentiation Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18LxCSmOovNvIyLcEdvkOdhHlOTgV2Osd

The Iris flower data set or Fisher's Iris data set is a multivariate data set introduced by Sir Ronald Fisher in the 1936 as an example of discriminant analysis.

The data set consists of 50 samples from each of three species of Iris (Iris setosa, Iris virginica and Iris versicolor), so 150 total samples. Four features were measured from each sample: the length and the width of the sepals and petals, in centimeters.

Here's a picture of the three different Iris types:
"""

# The Iris Setosa
from IPython.display import Image
url = 'http://upload.wikimedia.org/wikipedia/commons/5/56/Kosaciec_szczecinkowaty_Iris_setosa.jpg'
Image(url,width=300, height=300)

# The Iris Versicolor
from IPython.display import Image
url = 'http://upload.wikimedia.org/wikipedia/commons/4/41/Iris_versicolor_3.jpg'
Image(url,width=300, height=300)

# The Iris Virginica
from IPython.display import Image
url = 'http://upload.wikimedia.org/wikipedia/commons/9/9f/Iris_virginica.jpg'
Image(url,width=300, height=300)

"""The iris dataset contains measurements for 150 iris flowers from three different species.

The three classes in the Iris dataset:

    Iris-setosa (n=50)
    Iris-versicolor (n=50)
    Iris-virginica (n=50)

The four features of the Iris dataset:

    sepal length in cm
    sepal width in cm
    petal length in cm
    petal width in cm

## Getting the data
"""

import seaborn as sns

iris = sns.load_dataset('iris') #seaborn has its own datasets

"""
## Exploratory Data Analysis
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

iris.head()

sns.pairplot(iris,hue='species') #separation based on species

# It is clear that 'setosa' class can be easily separated

"""**A kde plot of sepal_length versus sepal width for setosa species of flower.**"""

setosa = iris[iris['species']=='setosa']
sns.kdeplot(x=setosa['sepal_width'],y=setosa['sepal_length'],cmap="plasma",fill=True)

sns.kdeplot(x=setosa['petal_width'],y=setosa['petal_length'],cmap='plasma',fill=True)

"""# Train Test Split"""

from sklearn.model_selection import train_test_split

X=iris.drop('species',axis=1)
y=iris['species']
X_train, X_test, y_train, y_test = train_test_split(
X, y, test_size=0.3)

"""# Training a Model

"""

from sklearn.svm import SVC

svc_iris = SVC()

svc_iris.fit(X_train,y_train)

"""## Model Evaluation

"""

pred = svc_iris.predict(X_test)

from sklearn.metrics import classification_report,confusion_matrix

print(confusion_matrix(y_test,pred))

print(classification_report(y_test,pred))

"""As we can see, the model as its is has an accuracy of 98% which is very good.

## Predictive model
"""

input_data = (5.1,3.5,1.4,0.2)

#converting input data into numpy array
input_data_numpy=np.asarray(input_data)

#reshaping
input_data_reshaped = input_data_numpy.reshape(1,-1)

prediction = svc_iris.predict(input_data_reshaped)
print(prediction)

if (prediction[0]=='setosa'):
    print('Flower Species : I. setosa')
elif (prediction[0]=='versicolor'):
    print('Flower Species : I. versicolor')
elif (prediction[0]=='Virginica'):
    print('Flower Species : I. virginica')

input_data = (5.5 ,2.4 ,3.7 ,1.0)

#converting input data into numpy array
input_data_numpy=np.asarray(input_data)

#reshaping
input_data_reshaped = input_data_numpy.reshape(1,-1)

prediction = svc_iris.predict(input_data_reshaped)
print(prediction)

if (prediction[0]=='setosa'):
    print('Flower Species : I. setosa')
elif (prediction[0]=='versicolor'):
    print('Flower Species : I. versicolor')
elif (prediction[0]=='Virginica'):
    print('Flower Species : I. virginica')